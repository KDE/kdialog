/*
 * This file was generated by dbusidl2cpp version 0.5
 * when processing input file org.kde.kdialog.ProgressDialog.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#include "kdialogadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ProgressDialogAdaptor
 */

ProgressDialogAdaptor::ProgressDialogAdaptor(QObject *parent)
   : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ProgressDialogAdaptor::~ProgressDialogAdaptor()
{
    // destructor
}

bool ProgressDialogAdaptor::autoClose() const
{
    // get the value of property autoClose
    return qvariant_cast< bool >(parent()->property("autoClose"));
}

void ProgressDialogAdaptor::setAutoClose(bool value)
{
    // set the value of property autoClose
    parent()->setProperty("autoClose", value);
}

void ProgressDialogAdaptor::setLabel(const QString &value)
{
    // set the value of property label
    parent()->setProperty("label", value);
}

int ProgressDialogAdaptor::maximum() const
{
    // get the value of property maximum
    return qvariant_cast< int >(parent()->property("maximum"));
}

void ProgressDialogAdaptor::setMaximum(int value)
{
    // set the value of property maximum
    parent()->setProperty("maximum", value);
}

int ProgressDialogAdaptor::value() const
{
    // get the value of property value
    return qvariant_cast< int >(parent()->property("value"));
}

void ProgressDialogAdaptor::setValue(int value)
{
    // set the value of property value
    parent()->setProperty("value", value);
}

void ProgressDialogAdaptor::close()
{
    // handle method call org.kde.kdialog.ProgressDialog.close
    QMetaObject::invokeMethod(parent(), "close");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->close();
}

void ProgressDialogAdaptor::showCancelButton(bool value)
{
    // handle method call org.kde.kdialog.ProgressDialog.showCancelButton
    QMetaObject::invokeMethod(parent(), "showCancelButton", Q_ARG(bool, value));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->showCancelButton(value);
}

bool ProgressDialogAdaptor::wasCancelled()
{
    // handle method call org.kde.kdialog.ProgressDialog.wasCancelled
    bool out0;
    QMetaObject::invokeMethod(parent(), "wasCancelled", Q_RETURN_ARG(bool, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->wasCancelled();
    return out0;
}


#include "kdialogadaptor.moc"
